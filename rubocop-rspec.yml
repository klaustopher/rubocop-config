---
RSpec/EmptyExampleGroup:
  Enabled: false

RSpec/AnyInstance:
  Enabled: false

RSpec/Be:
  Enabled: true

RSpec/BeEql:
  Enabled: true

RSpec/BeforeAfterAll:
  Enabled: true

RSpec/Capybara/VisibilityMatcher:
  Enabled: true

RSpec/ContextMethod:
  Enabled: true

RSpec/ContextWording:
  Enabled: false

RSpec/DescribeClass:
  Enabled: true

RSpec/DescribedClass:
  Enabled: true

RSpec/EmptyHook:
  Enabled: true

RSpec/EmptyLineAfterExampleGroup:
  Enabled: true

RSpec/ExampleLength:
  Enabled: false

RSpec/ExampleWording:
  Enabled: true

RSpec/ExpectChange:
  Enabled: true

RSpec/InstanceVariable:
  Enabled: true

RSpec/MessageSpies:
  Enabled: true
  EnforcedStyle: receive

# I'm not a fan of one epxectation per test ... When I am testing that something has multiple attributes
# assigned in a certain way, I will write multiple expectations and not run my setup 10 times just to have
# 10 single tests, just to make this happy here.
RSpec/MultipleExpectations:
  Enabled: false

# Sometimes many let's are needed ...
RSpec/MultipleMemoizedHelpers:
  Enabled: false

# I want to explicitly see `subject` in my tests to identify the main subject of the test,
# it is highlighted, whereas `user` (and others) just look like any other variable
RSpec/NamedSubject:
  Enabled: false

RSpec/ReceiveCounts:
  Enabled: true

RSpec/RepeatedExample:
  Enabled: true

RSpec/RepeatedDescription:
  Enabled: true

RSpec/StubbedMock:
  Enabled: false

RSpec/VariableName:
  EnforcedStyle: snake_case

RSpec/VoidExpect:
  Enabled: true

RSpec/IdenticalEqualityAssertion: # (new in 2.4)
  Enabled: true

RSpec/Rails/AvoidSetupHook: # (new in 2.4)
  Enabled: true

RSpec/ExcessiveDocstringSpacing: # new in 2.5
  Enabled: true

RSpec/SubjectDeclaration: # new in 2.5
  Enabled: true

# Want to explicitly use FactoryBot.create(...) instead of create(...) in my code
RSpec/FactoryBot/SyntaxMethods: # new in 2.7
  Enabled: false

RSpec/NestedGroups:
  Max: 10

Style/NestedFileDirname: # new in 1.26
  Enabled: true

RSpec/BeEq: # new in 2.9.0
  Enabled: true

RSpec/BeNil: # new in 2.9.0
  Enabled: true

RSpec/LetSetup:
  Enabled: true

RSpec/ChangeByZero: # new in 2.11.0
  Enabled: true

RSpec/VerifiedDoubleReference: # new in 2.10.0
  Enabled: true

RSpec/Capybara/SpecificMatcher: # new in 2.12
  Enabled: true

RSpec/Rails/HaveHttpStatus: # new in 2.12
  Enabled: true

RSpec/ClassCheck: # new in 2.13
  Enabled: true

RSpec/NoExpectationExample: # new in 2.13
  Enabled: true

RSpec/Capybara/SpecificFinders: # new in 2.13
  Enabled: true

RSpec/SortMetadata: # new in 2.14
  Enabled: true

RSpec/Capybara/NegationMatcher: # new in 2.14
  Enabled: true

RSpec/Capybara/SpecificActions: # new in 2.14
  Enabled: true

RSpec/FactoryBot/ConsistentParenthesesStyle: # new in 2.14
  Enabled: true

RSpec/Rails/InferredSpecType: # new in 2.14
  Enabled: true

RSpec/DuplicatedMetadata: # new in 2.16
  Enabled: true

RSpec/PendingWithoutReason: # new in 2.16
  Enabled: true

RSpec/FactoryBot/FactoryNameStyle: # new in 2.16
  Enabled: true

RSpec/Capybara/MatchStyle: # new in 2.17
  Enabled: true

RSpec/Rails/MinitestAssertions: # new in 2.17
  Enabled: true
