Style/Documentation:
  Enabled: false

Style/ClassAndModuleChildren:
  Enabled: true
  EnforcedStyle: nested

Style/EmptyElse:
  EnforcedStyle: empty

Style/FrozenStringLiteralComment:
  EnforcedStyle: never

Style/IfUnlessModifier:
  Enabled: false

Style/SymbolArray:
  EnforcedStyle: brackets

Style/NumericPredicate:
  EnforcedStyle: comparison

Style/ZeroLengthPredicate:
  Enabled: false

Style/NegatedIf:
  Enabled: false

Style/GuardClause:
  Enabled: false

Style/EmptyMethod:
  Enabled: false

Style/MultilineTernaryOperator:
  Enabled: true

Style/DoubleNegation:
  Enabled: true

Style/SingleLineBlockParams:
  Enabled: false

Style/RedundantCondition:
  Enabled: false

Style/TrailingUnderscoreVariable:
  Enabled: true

Style/MultilineBlockChain:
  Enabled: false

Style/AsciiComments:
  Enabled: false

Style/RedundantReturn:
  Enabled: true

Style/HashConversion: # (new in 1.10)
  Enabled: true

Style/HashEachMethods:
  Enabled: true

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

Style/TernaryParentheses:
  EnforcedStyle: require_parentheses_when_complex

Style/FloatDivision:
  Enabled: true

Style/CommentedKeyword:
  Enabled: false

Style/NumberedParameters: # new in 1.22
  Enabled: true

Style/NumberedParametersLimit: # new in 1.22
  Enabled: true

Style/OpenStructUse: # new in 1.23
  Enabled: true

Style/SelectByRegexp: # new in 1.22
  Enabled: true

Style/AccessorGrouping:
  Enabled: false

Style/BisectedAttrAccessor:
  Enabled: false

Style/CaseLikeIf:
  Enabled: false

Style/ClassEqualityComparison:
  Enabled: false

Style/CombinableLoops:
  Enabled: false

Style/ExplicitBlockArgument:
  Enabled: true

Style/ExponentialNotation:
  Enabled: false

Style/GlobalStdStream:
  Enabled: true

Style/HashAsLastArrayItem:
  Enabled: true

Style/HashLikeCase:
  Enabled: false

Style/IfWithBooleanLiteralBranches: # (new in 1.9)
  Enabled: true

Style/KeywordParametersOrder:
  Enabled: true

Style/OptionalBooleanParameter:
  Enabled: true

Style/RedundantAssignment:
  Enabled: true

Style/RedundantFetchBlock:
  Enabled: true

Style/RedundantFileExtensionInRequire:
  Enabled: true

Style/RedundantRegexpCharacterClass:
  Enabled: false

Style/RedundantRegexpEscape:
  Enabled: true

Style/RedundantSelfAssignment:
  Enabled: true

Style/SingleArgumentDig:
  Enabled: true

Style/SlicingWithRange:
  Enabled: false

Style/SoleNestedConditional:
  Enabled: true

Style/StringConcatenation:
  Enabled: true

Style/StringLiterals:
  Enabled: true
  EnforcedStyle: double_quotes

Style/HashSyntax:
  EnforcedShorthandSyntax: never

Style/SignalException:
  Enabled: true

Style/FormatStringToken:
  Enabled: false

Style/ArgumentsForwarding: # (new in 1.1)
  Enabled: true

Style/CollectionCompact: # (new in 1.2)
  Enabled: true

Style/DocumentDynamicEvalDefinition: # (new in 1.1)
  Enabled: true

Style/NegatedIfElseCondition: # (new in 1.2)
  Enabled: true

Style/NilLambda: # (new in 1.3)
  Enabled: true

Style/RedundantArgument: # (new in 1.4)
  Enabled: false

Style/SwapValues: # (new in 1.1)
  Enabled: true

Style/HashExcept: # (new in 1.7)
  Enabled: true

Style/EndlessMethod: # (new in 1.8)
  Enabled: true

Style/StringChars: # (new in 1.12)
  Enabled: true

Style/InPatternThen: # (new in 1.16)
  Enabled: true

Style/MultilineInPatternThen: # (new in 1.16)
  Enabled: true

Style/QuotedSymbols: # (new in 1.16)
  Enabled: true

Style/RedundantSelfAssignmentBranch: # (new in 1.19)
  Enabled: true

Style/FileRead: # new in 1.24
  Enabled: true

Style/FileWrite: # new in 1.24
  Enabled: true

Style/MapToHash: # new in 1.24
  Enabled: true

Style/FetchEnvVar: # new in 1.28
  Enabled: true

Style/ObjectThen: # new in 1.28
  Enabled: true

Style/EnvHome: # new in 1.29
  Enabled: true

Style/MapCompactWithConditionalBlock: # new in 1.30
  Enabled: true

Style/EmptyHeredoc: # new in 1.32
  Enabled: true

Style/MagicCommentFormat: # new in 1.35
  Enabled: true

Style/OperatorMethodCall: # new in 1.37
  Enabled: true

Style/RedundantStringEscape: # new in 1.37
  Enabled: true

Style/RedundantEach: # new in 1.38
  Enabled: true

Style/RedundantConstantBase: # new in 1.40
  Enabled: true

Style/ArrayIntersect: # new in 1.40
  Enabled: true

Style/ConcatArrayLiterals: # new in 1.41
  Enabled: true

Style/RedundantDoubleSplatHashBraces: # new in 1.41
  Enabled: true

Style/MapToSet: # new in 1.42
  Enabled: true

Style/MinMaxComparison: # new in 1.42
  Enabled: true

Style/YodaExpression: # new in 1.42
  Enabled: true

Style/RedundantInitialize: # new in 1.27
  Enabled: true

Style/ComparableClamp: # new in 1.44
  Enabled: true

Style/RedundantHeredocDelimiterQuotes: # new in 1.45
  Enabled: true

Style/DirEmpty: # new in 1.48
  Enabled: true

Style/FileEmpty: # new in 1.48
  Enabled: true

Style/DataInheritance: # new in 1.49
  Enabled: true

Style/RedundantLineContinuation: # new in 1.49
  Enabled: true

Style/ExactRegexpMatch: # new in 1.51
  Enabled: true

Style/RedundantArrayConstructor: # new in 1.52
  Enabled: true

Style/RedundantFilterChain: # new in 1.52
  Enabled: true

Style/RedundantRegexpConstructor: # new in 1.52
  Enabled: true

Style/RedundantCurrentDirectoryInPath: # new in 1.53
  Enabled: true

Style/RedundantRegexpArgument: # new in 1.53
  Enabled: true

# IMHO `nil` is a perfectly fine return value for predicate methods, as this is also present int STDLIB
Style/ReturnNilInPredicateMethodDefinition: # new in 1.53
  Enabled: false

Style/YAMLFileRead: # new in 1.53
  Enabled: true

Style/NestedFileDirname: # new in 1.26
  Enabled: true

Style/TrailingCommaInHashLiteral:
  Enabled: true
  EnforcedStyleForMultiline: consistent_comma

Style/TrailingCommaInArrayLiteral:
  Enabled: true
  EnforcedStyleForMultiline: consistent_comma

Style/SingleLineDoEndBlock: # new in 1.57
  Enabled: true

Style/SuperWithArgsParentheses: # new in 1.58
  Enabled: true

Style/ArrayFirstLast: # new in 1.58
  Enabled: true

Style/MapIntoArray: # new in 1.63
  Enabled: true

Style/SendWithLiteralMethodName: # new in 1.64
  Enabled: true

Style/SuperArguments: # new in 1.64
  Enabled: true
